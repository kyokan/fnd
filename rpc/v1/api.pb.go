// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.11.4
// source: api.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type GetStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID      []byte `protobuf:"bytes,10,opt,name=peerID,proto3" json:"peerID,omitempty"`
	PeerCount   uint32 `protobuf:"varint,20,opt,name=peerCount,proto3" json:"peerCount,omitempty"`
	HeaderCount uint32 `protobuf:"varint,30,opt,name=headerCount,proto3" json:"headerCount,omitempty"`
	TxBytes     uint64 `protobuf:"varint,40,opt,name=txBytes,proto3" json:"txBytes,omitempty"`
	RxBytes     uint64 `protobuf:"varint,50,opt,name=rxBytes,proto3" json:"rxBytes,omitempty"`
}

func (x *GetStatusRes) Reset() {
	*x = GetStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRes) ProtoMessage() {}

func (x *GetStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRes.ProtoReflect.Descriptor instead.
func (*GetStatusRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetStatusRes) GetPeerID() []byte {
	if x != nil {
		return x.PeerID
	}
	return nil
}

func (x *GetStatusRes) GetPeerCount() uint32 {
	if x != nil {
		return x.PeerCount
	}
	return 0
}

func (x *GetStatusRes) GetHeaderCount() uint32 {
	if x != nil {
		return x.HeaderCount
	}
	return 0
}

func (x *GetStatusRes) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *GetStatusRes) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

type GetNamesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetNamesReq) Reset() {
	*x = GetNamesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamesReq) ProtoMessage() {}

func (x *GetNamesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamesReq.ProtoReflect.Descriptor instead.
func (*GetNamesReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetNamesReq) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *GetNamesReq) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetNamesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PublicKey []byte `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *GetNamesRes) Reset() {
	*x = GetNamesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamesRes) ProtoMessage() {}

func (x *GetNamesRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamesRes.ProtoReflect.Descriptor instead.
func (*GetNamesRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetNamesRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetNamesRes) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type AddPeerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID       []byte `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	Ip           string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	VerifyPeerID bool   `protobuf:"varint,3,opt,name=verifyPeerID,proto3" json:"verifyPeerID,omitempty"`
}

func (x *AddPeerReq) Reset() {
	*x = AddPeerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerReq) ProtoMessage() {}

func (x *AddPeerReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerReq.ProtoReflect.Descriptor instead.
func (*AddPeerReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *AddPeerReq) GetPeerID() []byte {
	if x != nil {
		return x.PeerID
	}
	return nil
}

func (x *AddPeerReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AddPeerReq) GetVerifyPeerID() bool {
	if x != nil {
		return x.VerifyPeerID
	}
	return false
}

type BanPeerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip         string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	DurationMS uint32 `protobuf:"varint,2,opt,name=durationMS,proto3" json:"durationMS,omitempty"`
}

func (x *BanPeerReq) Reset() {
	*x = BanPeerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanPeerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanPeerReq) ProtoMessage() {}

func (x *BanPeerReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanPeerReq.ProtoReflect.Descriptor instead.
func (*BanPeerReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *BanPeerReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *BanPeerReq) GetDurationMS() uint32 {
	if x != nil {
		return x.DurationMS
	}
	return 0
}

type UnbanPeerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *UnbanPeerReq) Reset() {
	*x = UnbanPeerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanPeerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanPeerReq) ProtoMessage() {}

func (x *UnbanPeerReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanPeerReq.ProtoReflect.Descriptor instead.
func (*UnbanPeerReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *UnbanPeerReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type ListPeersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPeersReq) Reset() {
	*x = ListPeersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPeersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersReq) ProtoMessage() {}

func (x *ListPeersReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersReq.ProtoReflect.Descriptor instead.
func (*ListPeersReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

type ListPeersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID      []byte `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	Ip          string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Banned      bool   `protobuf:"varint,3,opt,name=banned,proto3" json:"banned,omitempty"`
	Connected   bool   `protobuf:"varint,4,opt,name=connected,proto3" json:"connected,omitempty"`
	TxBytes     uint64 `protobuf:"varint,5,opt,name=txBytes,proto3" json:"txBytes,omitempty"`
	RxBytes     uint64 `protobuf:"varint,6,opt,name=rxBytes,proto3" json:"rxBytes,omitempty"`
	Whitelisted bool   `protobuf:"varint,7,opt,name=whitelisted,proto3" json:"whitelisted,omitempty"`
}

func (x *ListPeersRes) Reset() {
	*x = ListPeersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPeersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersRes) ProtoMessage() {}

func (x *ListPeersRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersRes.ProtoReflect.Descriptor instead.
func (*ListPeersRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *ListPeersRes) GetPeerID() []byte {
	if x != nil {
		return x.PeerID
	}
	return nil
}

func (x *ListPeersRes) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ListPeersRes) GetBanned() bool {
	if x != nil {
		return x.Banned
	}
	return false
}

func (x *ListPeersRes) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *ListPeersRes) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *ListPeersRes) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *ListPeersRes) GetWhitelisted() bool {
	if x != nil {
		return x.Whitelisted
	}
	return false
}

type CheckoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CheckoutReq) Reset() {
	*x = CheckoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutReq) ProtoMessage() {}

func (x *CheckoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutReq.ProtoReflect.Descriptor instead.
func (*CheckoutReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *CheckoutReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CheckoutRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxID uint32 `protobuf:"varint,1,opt,name=txID,proto3" json:"txID,omitempty"`
}

func (x *CheckoutRes) Reset() {
	*x = CheckoutRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutRes) ProtoMessage() {}

func (x *CheckoutRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutRes.ProtoReflect.Descriptor instead.
func (*CheckoutRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *CheckoutRes) GetTxID() uint32 {
	if x != nil {
		return x.TxID
	}
	return 0
}

type WriteAtReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxID   uint32 `protobuf:"varint,1,opt,name=txID,proto3" json:"txID,omitempty"`
	Offset uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WriteAtReq) Reset() {
	*x = WriteAtReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteAtReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteAtReq) ProtoMessage() {}

func (x *WriteAtReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteAtReq.ProtoReflect.Descriptor instead.
func (*WriteAtReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *WriteAtReq) GetTxID() uint32 {
	if x != nil {
		return x.TxID
	}
	return 0
}

func (x *WriteAtReq) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *WriteAtReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WriteAtRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesWritten uint32 `protobuf:"varint,1,opt,name=bytesWritten,proto3" json:"bytesWritten,omitempty"`
	WriteErr     string `protobuf:"bytes,2,opt,name=writeErr,proto3" json:"writeErr,omitempty"`
}

func (x *WriteAtRes) Reset() {
	*x = WriteAtRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteAtRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteAtRes) ProtoMessage() {}

func (x *WriteAtRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteAtRes.ProtoReflect.Descriptor instead.
func (*WriteAtRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *WriteAtRes) GetBytesWritten() uint32 {
	if x != nil {
		return x.BytesWritten
	}
	return 0
}

func (x *WriteAtRes) GetWriteErr() string {
	if x != nil {
		return x.WriteErr
	}
	return ""
}

type TruncateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxID uint32 `protobuf:"varint,1,opt,name=txID,proto3" json:"txID,omitempty"`
}

func (x *TruncateReq) Reset() {
	*x = TruncateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TruncateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateReq) ProtoMessage() {}

func (x *TruncateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateReq.ProtoReflect.Descriptor instead.
func (*TruncateReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *TruncateReq) GetTxID() uint32 {
	if x != nil {
		return x.TxID
	}
	return 0
}

type TruncateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TruncateRes) Reset() {
	*x = TruncateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TruncateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateRes) ProtoMessage() {}

func (x *TruncateRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateRes.ProtoReflect.Descriptor instead.
func (*TruncateRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

type PreCommitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxID uint32 `protobuf:"varint,1,opt,name=txID,proto3" json:"txID,omitempty"`
}

func (x *PreCommitReq) Reset() {
	*x = PreCommitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreCommitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreCommitReq) ProtoMessage() {}

func (x *PreCommitReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreCommitReq.ProtoReflect.Descriptor instead.
func (*PreCommitReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *PreCommitReq) GetTxID() uint32 {
	if x != nil {
		return x.TxID
	}
	return 0
}

type PreCommitRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerkleRoot []byte `protobuf:"bytes,1,opt,name=merkleRoot,proto3" json:"merkleRoot,omitempty"`
}

func (x *PreCommitRes) Reset() {
	*x = PreCommitRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreCommitRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreCommitRes) ProtoMessage() {}

func (x *PreCommitRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreCommitRes.ProtoReflect.Descriptor instead.
func (*PreCommitRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *PreCommitRes) GetMerkleRoot() []byte {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

type CommitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxID      uint32 `protobuf:"varint,1,opt,name=txID,proto3" json:"txID,omitempty"`
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Broadcast bool   `protobuf:"varint,4,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
}

func (x *CommitReq) Reset() {
	*x = CommitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitReq) ProtoMessage() {}

func (x *CommitReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitReq.ProtoReflect.Descriptor instead.
func (*CommitReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (x *CommitReq) GetTxID() uint32 {
	if x != nil {
		return x.TxID
	}
	return 0
}

func (x *CommitReq) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CommitReq) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *CommitReq) GetBroadcast() bool {
	if x != nil {
		return x.Broadcast
	}
	return false
}

type CommitRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommitRes) Reset() {
	*x = CommitRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRes) ProtoMessage() {}

func (x *CommitRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRes.ProtoReflect.Descriptor instead.
func (*CommitRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

type ReadAtReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Offset uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Len    uint32 `protobuf:"varint,3,opt,name=len,proto3" json:"len,omitempty"`
}

func (x *ReadAtReq) Reset() {
	*x = ReadAtReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAtReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAtReq) ProtoMessage() {}

func (x *ReadAtReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAtReq.ProtoReflect.Descriptor instead.
func (*ReadAtReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *ReadAtReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReadAtReq) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadAtReq) GetLen() uint32 {
	if x != nil {
		return x.Len
	}
	return 0
}

type ReadAtRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReadAtRes) Reset() {
	*x = ReadAtRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAtRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAtRes) ProtoMessage() {}

func (x *ReadAtRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAtRes.ProtoReflect.Descriptor instead.
func (*ReadAtRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *ReadAtRes) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadAtRes) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BlobInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *BlobInfoReq) Reset() {
	*x = BlobInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobInfoReq) ProtoMessage() {}

func (x *BlobInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobInfoReq.ProtoReflect.Descriptor instead.
func (*BlobInfoReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (x *BlobInfoReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListBlobInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
}

func (x *ListBlobInfoReq) Reset() {
	*x = ListBlobInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlobInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlobInfoReq) ProtoMessage() {}

func (x *ListBlobInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlobInfoReq.ProtoReflect.Descriptor instead.
func (*ListBlobInfoReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22}
}

func (x *ListBlobInfoReq) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

type BlobInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PublicKey    []byte `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	ImportHeight uint32 `protobuf:"varint,3,opt,name=importHeight,proto3" json:"importHeight,omitempty"`
	Timestamp    uint64 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MerkleRoot   []byte `protobuf:"bytes,5,opt,name=merkleRoot,proto3" json:"merkleRoot,omitempty"`
	ReservedRoot []byte `protobuf:"bytes,6,opt,name=reservedRoot,proto3" json:"reservedRoot,omitempty"`
	ReceivedAt   uint64 `protobuf:"varint,7,opt,name=receivedAt,proto3" json:"receivedAt,omitempty"`
	Signature    []byte `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	Timebank     uint32 `protobuf:"varint,9,opt,name=timebank,proto3" json:"timebank,omitempty"`
}

func (x *BlobInfoRes) Reset() {
	*x = BlobInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobInfoRes) ProtoMessage() {}

func (x *BlobInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobInfoRes.ProtoReflect.Descriptor instead.
func (*BlobInfoRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23}
}

func (x *BlobInfoRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BlobInfoRes) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *BlobInfoRes) GetImportHeight() uint32 {
	if x != nil {
		return x.ImportHeight
	}
	return 0
}

func (x *BlobInfoRes) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlobInfoRes) GetMerkleRoot() []byte {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

func (x *BlobInfoRes) GetReservedRoot() []byte {
	if x != nil {
		return x.ReservedRoot
	}
	return nil
}

func (x *BlobInfoRes) GetReceivedAt() uint64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

func (x *BlobInfoRes) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *BlobInfoRes) GetTimebank() uint32 {
	if x != nil {
		return x.Timebank
	}
	return 0
}

type SendUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SendUpdateReq) Reset() {
	*x = SendUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendUpdateReq) ProtoMessage() {}

func (x *SendUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendUpdateReq.ProtoReflect.Descriptor instead.
func (*SendUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24}
}

func (x *SendUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SendUpdateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipientCount uint32 `protobuf:"varint,1,opt,name=recipientCount,proto3" json:"recipientCount,omitempty"`
}

func (x *SendUpdateRes) Reset() {
	*x = SendUpdateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendUpdateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendUpdateRes) ProtoMessage() {}

func (x *SendUpdateRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendUpdateRes.ProtoReflect.Descriptor instead.
func (*SendUpdateRes) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25}
}

func (x *SendUpdateRes) GetRecipientCount() uint32 {
	if x != nil {
		return x.RecipientCount
	}
	return 0
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x74, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x78, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x78, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x22, 0x39, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x58, 0x0a,
	0x0a, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x65, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0x3c, 0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x53, 0x22, 0x1e, 0x0a, 0x0c, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x0e, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x22, 0xc2, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x72, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x22, 0x21, 0x0a, 0x0b, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a,
	0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44,
	0x22, 0x4c, 0x0a, 0x0a, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x78,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c,
	0x0a, 0x0a, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x74, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x57, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x62, 0x79, 0x74, 0x65, 0x73, 0x57, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x77, 0x72, 0x69, 0x74, 0x65, 0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x77, 0x72, 0x69, 0x74, 0x65, 0x45, 0x72, 0x72, 0x22, 0x21, 0x0a, 0x0b,
	0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x22,
	0x0d, 0x0a, 0x0b, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x22,
	0x0a, 0x0c, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x78,
	0x49, 0x44, 0x22, 0x2e, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f,
	0x6f, 0x74, 0x22, 0x79, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x78, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0x0b, 0x0a,
	0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x09, 0x52, 0x65,
	0x61, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6c, 0x65, 0x6e, 0x22, 0x37, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x41, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x21,
	0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x27, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x9f, 0x02, 0x0a, 0x0b, 0x42,
	0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x52, 0x6f,
	0x6f, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x22, 0x23, 0x0a, 0x0d,
	0x53, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x37, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xaa, 0x04, 0x0a, 0x0a, 0x46,
	0x6f, 0x6f, 0x74, 0x6e, 0x6f, 0x74, 0x65, 0x76, 0x31, 0x12, 0x22, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x12, 0x0b, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x1e, 0x0a,
	0x07, 0x42, 0x61, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x12, 0x0b, 0x2e, 0x42, 0x61, 0x6e, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x22, 0x0a,
	0x09, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x55, 0x6e, 0x62,
	0x61, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x2b, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x0d,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x26,
	0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x12, 0x0c, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x07, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41,
	0x74, 0x12, 0x0b, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0b,
	0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x74, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x08, 0x54,
	0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x29, 0x0a,
	0x09, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x0d, 0x2e, 0x50, 0x72, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x50, 0x72, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x0a, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0a,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x06, 0x52, 0x65,
	0x61, 0x64, 0x41, 0x74, 0x12, 0x0a, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x0a, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x2e, 0x42, 0x6c,
	0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x42, 0x6c, 0x6f, 0x62,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c,
	0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x42, 0x6c, 0x6f, 0x62,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x2c, 0x0a, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x42, 0x04, 0x5a, 0x02, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_api_proto_goTypes = []interface{}{
	(*Empty)(nil),           // 0: Empty
	(*GetStatusRes)(nil),    // 1: GetStatusRes
	(*GetNamesReq)(nil),     // 2: GetNamesReq
	(*GetNamesRes)(nil),     // 3: GetNamesRes
	(*AddPeerReq)(nil),      // 4: AddPeerReq
	(*BanPeerReq)(nil),      // 5: BanPeerReq
	(*UnbanPeerReq)(nil),    // 6: UnbanPeerReq
	(*ListPeersReq)(nil),    // 7: ListPeersReq
	(*ListPeersRes)(nil),    // 8: ListPeersRes
	(*CheckoutReq)(nil),     // 9: CheckoutReq
	(*CheckoutRes)(nil),     // 10: CheckoutRes
	(*WriteAtReq)(nil),      // 11: WriteAtReq
	(*WriteAtRes)(nil),      // 12: WriteAtRes
	(*TruncateReq)(nil),     // 13: TruncateReq
	(*TruncateRes)(nil),     // 14: TruncateRes
	(*PreCommitReq)(nil),    // 15: PreCommitReq
	(*PreCommitRes)(nil),    // 16: PreCommitRes
	(*CommitReq)(nil),       // 17: CommitReq
	(*CommitRes)(nil),       // 18: CommitRes
	(*ReadAtReq)(nil),       // 19: ReadAtReq
	(*ReadAtRes)(nil),       // 20: ReadAtRes
	(*BlobInfoReq)(nil),     // 21: BlobInfoReq
	(*ListBlobInfoReq)(nil), // 22: ListBlobInfoReq
	(*BlobInfoRes)(nil),     // 23: BlobInfoRes
	(*SendUpdateReq)(nil),   // 24: SendUpdateReq
	(*SendUpdateRes)(nil),   // 25: SendUpdateRes
}
var file_api_proto_depIdxs = []int32{
	0,  // 0: Footnotev1.GetStatus:input_type -> Empty
	4,  // 1: Footnotev1.AddPeer:input_type -> AddPeerReq
	5,  // 2: Footnotev1.BanPeer:input_type -> BanPeerReq
	6,  // 3: Footnotev1.UnbanPeer:input_type -> UnbanPeerReq
	7,  // 4: Footnotev1.ListPeers:input_type -> ListPeersReq
	9,  // 5: Footnotev1.Checkout:input_type -> CheckoutReq
	11, // 6: Footnotev1.WriteAt:input_type -> WriteAtReq
	13, // 7: Footnotev1.Truncate:input_type -> TruncateReq
	15, // 8: Footnotev1.PreCommit:input_type -> PreCommitReq
	17, // 9: Footnotev1.Commit:input_type -> CommitReq
	19, // 10: Footnotev1.ReadAt:input_type -> ReadAtReq
	21, // 11: Footnotev1.GetBlobInfo:input_type -> BlobInfoReq
	22, // 12: Footnotev1.ListBlobInfo:input_type -> ListBlobInfoReq
	24, // 13: Footnotev1.SendUpdate:input_type -> SendUpdateReq
	1,  // 14: Footnotev1.GetStatus:output_type -> GetStatusRes
	0,  // 15: Footnotev1.AddPeer:output_type -> Empty
	0,  // 16: Footnotev1.BanPeer:output_type -> Empty
	0,  // 17: Footnotev1.UnbanPeer:output_type -> Empty
	8,  // 18: Footnotev1.ListPeers:output_type -> ListPeersRes
	10, // 19: Footnotev1.Checkout:output_type -> CheckoutRes
	12, // 20: Footnotev1.WriteAt:output_type -> WriteAtRes
	0,  // 21: Footnotev1.Truncate:output_type -> Empty
	16, // 22: Footnotev1.PreCommit:output_type -> PreCommitRes
	18, // 23: Footnotev1.Commit:output_type -> CommitRes
	20, // 24: Footnotev1.ReadAt:output_type -> ReadAtRes
	23, // 25: Footnotev1.GetBlobInfo:output_type -> BlobInfoRes
	23, // 26: Footnotev1.ListBlobInfo:output_type -> BlobInfoRes
	25, // 27: Footnotev1.SendUpdate:output_type -> SendUpdateRes
	14, // [14:28] is the sub-list for method output_type
	0,  // [0:14] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPeerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanPeerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanPeerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPeersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPeersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteAtReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteAtRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TruncateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TruncateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreCommitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreCommitRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAtReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAtRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlobInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendUpdateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// Footnotev1Client is the client API for Footnotev1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Footnotev1Client interface {
	GetStatus(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetStatusRes, error)
	AddPeer(ctx context.Context, in *AddPeerReq, opts ...grpc.CallOption) (*Empty, error)
	BanPeer(ctx context.Context, in *BanPeerReq, opts ...grpc.CallOption) (*Empty, error)
	UnbanPeer(ctx context.Context, in *UnbanPeerReq, opts ...grpc.CallOption) (*Empty, error)
	ListPeers(ctx context.Context, in *ListPeersReq, opts ...grpc.CallOption) (Footnotev1_ListPeersClient, error)
	Checkout(ctx context.Context, in *CheckoutReq, opts ...grpc.CallOption) (*CheckoutRes, error)
	WriteAt(ctx context.Context, in *WriteAtReq, opts ...grpc.CallOption) (*WriteAtRes, error)
	Truncate(ctx context.Context, in *TruncateReq, opts ...grpc.CallOption) (*Empty, error)
	PreCommit(ctx context.Context, in *PreCommitReq, opts ...grpc.CallOption) (*PreCommitRes, error)
	Commit(ctx context.Context, in *CommitReq, opts ...grpc.CallOption) (*CommitRes, error)
	ReadAt(ctx context.Context, in *ReadAtReq, opts ...grpc.CallOption) (*ReadAtRes, error)
	GetBlobInfo(ctx context.Context, in *BlobInfoReq, opts ...grpc.CallOption) (*BlobInfoRes, error)
	ListBlobInfo(ctx context.Context, in *ListBlobInfoReq, opts ...grpc.CallOption) (Footnotev1_ListBlobInfoClient, error)
	SendUpdate(ctx context.Context, in *SendUpdateReq, opts ...grpc.CallOption) (*SendUpdateRes, error)
}

type footnotev1Client struct {
	cc grpc.ClientConnInterface
}

func NewFootnotev1Client(cc grpc.ClientConnInterface) Footnotev1Client {
	return &footnotev1Client{cc}
}

func (c *footnotev1Client) GetStatus(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetStatusRes, error) {
	out := new(GetStatusRes)
	err := c.cc.Invoke(ctx, "/Footnotev1/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footnotev1Client) AddPeer(ctx context.Context, in *AddPeerReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Footnotev1/AddPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footnotev1Client) BanPeer(ctx context.Context, in *BanPeerReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Footnotev1/BanPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footnotev1Client) UnbanPeer(ctx context.Context, in *UnbanPeerReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Footnotev1/UnbanPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footnotev1Client) ListPeers(ctx context.Context, in *ListPeersReq, opts ...grpc.CallOption) (Footnotev1_ListPeersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Footnotev1_serviceDesc.Streams[0], "/Footnotev1/ListPeers", opts...)
	if err != nil {
		return nil, err
	}
	x := &footnotev1ListPeersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Footnotev1_ListPeersClient interface {
	Recv() (*ListPeersRes, error)
	grpc.ClientStream
}

type footnotev1ListPeersClient struct {
	grpc.ClientStream
}

func (x *footnotev1ListPeersClient) Recv() (*ListPeersRes, error) {
	m := new(ListPeersRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *footnotev1Client) Checkout(ctx context.Context, in *CheckoutReq, opts ...grpc.CallOption) (*CheckoutRes, error) {
	out := new(CheckoutRes)
	err := c.cc.Invoke(ctx, "/Footnotev1/Checkout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footnotev1Client) WriteAt(ctx context.Context, in *WriteAtReq, opts ...grpc.CallOption) (*WriteAtRes, error) {
	out := new(WriteAtRes)
	err := c.cc.Invoke(ctx, "/Footnotev1/WriteAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footnotev1Client) Truncate(ctx context.Context, in *TruncateReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Footnotev1/Truncate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footnotev1Client) PreCommit(ctx context.Context, in *PreCommitReq, opts ...grpc.CallOption) (*PreCommitRes, error) {
	out := new(PreCommitRes)
	err := c.cc.Invoke(ctx, "/Footnotev1/PreCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footnotev1Client) Commit(ctx context.Context, in *CommitReq, opts ...grpc.CallOption) (*CommitRes, error) {
	out := new(CommitRes)
	err := c.cc.Invoke(ctx, "/Footnotev1/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footnotev1Client) ReadAt(ctx context.Context, in *ReadAtReq, opts ...grpc.CallOption) (*ReadAtRes, error) {
	out := new(ReadAtRes)
	err := c.cc.Invoke(ctx, "/Footnotev1/ReadAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footnotev1Client) GetBlobInfo(ctx context.Context, in *BlobInfoReq, opts ...grpc.CallOption) (*BlobInfoRes, error) {
	out := new(BlobInfoRes)
	err := c.cc.Invoke(ctx, "/Footnotev1/GetBlobInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footnotev1Client) ListBlobInfo(ctx context.Context, in *ListBlobInfoReq, opts ...grpc.CallOption) (Footnotev1_ListBlobInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Footnotev1_serviceDesc.Streams[1], "/Footnotev1/ListBlobInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &footnotev1ListBlobInfoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Footnotev1_ListBlobInfoClient interface {
	Recv() (*BlobInfoRes, error)
	grpc.ClientStream
}

type footnotev1ListBlobInfoClient struct {
	grpc.ClientStream
}

func (x *footnotev1ListBlobInfoClient) Recv() (*BlobInfoRes, error) {
	m := new(BlobInfoRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *footnotev1Client) SendUpdate(ctx context.Context, in *SendUpdateReq, opts ...grpc.CallOption) (*SendUpdateRes, error) {
	out := new(SendUpdateRes)
	err := c.cc.Invoke(ctx, "/Footnotev1/SendUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Footnotev1Server is the server API for Footnotev1 service.
type Footnotev1Server interface {
	GetStatus(context.Context, *Empty) (*GetStatusRes, error)
	AddPeer(context.Context, *AddPeerReq) (*Empty, error)
	BanPeer(context.Context, *BanPeerReq) (*Empty, error)
	UnbanPeer(context.Context, *UnbanPeerReq) (*Empty, error)
	ListPeers(*ListPeersReq, Footnotev1_ListPeersServer) error
	Checkout(context.Context, *CheckoutReq) (*CheckoutRes, error)
	WriteAt(context.Context, *WriteAtReq) (*WriteAtRes, error)
	Truncate(context.Context, *TruncateReq) (*Empty, error)
	PreCommit(context.Context, *PreCommitReq) (*PreCommitRes, error)
	Commit(context.Context, *CommitReq) (*CommitRes, error)
	ReadAt(context.Context, *ReadAtReq) (*ReadAtRes, error)
	GetBlobInfo(context.Context, *BlobInfoReq) (*BlobInfoRes, error)
	ListBlobInfo(*ListBlobInfoReq, Footnotev1_ListBlobInfoServer) error
	SendUpdate(context.Context, *SendUpdateReq) (*SendUpdateRes, error)
}

// UnimplementedFootnotev1Server can be embedded to have forward compatible implementations.
type UnimplementedFootnotev1Server struct {
}

func (*UnimplementedFootnotev1Server) GetStatus(context.Context, *Empty) (*GetStatusRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}
func (*UnimplementedFootnotev1Server) AddPeer(context.Context, *AddPeerReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPeer not implemented")
}
func (*UnimplementedFootnotev1Server) BanPeer(context.Context, *BanPeerReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BanPeer not implemented")
}
func (*UnimplementedFootnotev1Server) UnbanPeer(context.Context, *UnbanPeerReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnbanPeer not implemented")
}
func (*UnimplementedFootnotev1Server) ListPeers(*ListPeersReq, Footnotev1_ListPeersServer) error {
	return status.Errorf(codes.Unimplemented, "method ListPeers not implemented")
}
func (*UnimplementedFootnotev1Server) Checkout(context.Context, *CheckoutReq) (*CheckoutRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Checkout not implemented")
}
func (*UnimplementedFootnotev1Server) WriteAt(context.Context, *WriteAtReq) (*WriteAtRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteAt not implemented")
}
func (*UnimplementedFootnotev1Server) Truncate(context.Context, *TruncateReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Truncate not implemented")
}
func (*UnimplementedFootnotev1Server) PreCommit(context.Context, *PreCommitReq) (*PreCommitRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreCommit not implemented")
}
func (*UnimplementedFootnotev1Server) Commit(context.Context, *CommitReq) (*CommitRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Commit not implemented")
}
func (*UnimplementedFootnotev1Server) ReadAt(context.Context, *ReadAtReq) (*ReadAtRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAt not implemented")
}
func (*UnimplementedFootnotev1Server) GetBlobInfo(context.Context, *BlobInfoReq) (*BlobInfoRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlobInfo not implemented")
}
func (*UnimplementedFootnotev1Server) ListBlobInfo(*ListBlobInfoReq, Footnotev1_ListBlobInfoServer) error {
	return status.Errorf(codes.Unimplemented, "method ListBlobInfo not implemented")
}
func (*UnimplementedFootnotev1Server) SendUpdate(context.Context, *SendUpdateReq) (*SendUpdateRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendUpdate not implemented")
}

func RegisterFootnotev1Server(s *grpc.Server, srv Footnotev1Server) {
	s.RegisterService(&_Footnotev1_serviceDesc, srv)
}

func _Footnotev1_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).GetStatus(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Footnotev1_AddPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPeerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).AddPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/AddPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).AddPeer(ctx, req.(*AddPeerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Footnotev1_BanPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BanPeerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).BanPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/BanPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).BanPeer(ctx, req.(*BanPeerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Footnotev1_UnbanPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnbanPeerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).UnbanPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/UnbanPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).UnbanPeer(ctx, req.(*UnbanPeerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Footnotev1_ListPeers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListPeersReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(Footnotev1Server).ListPeers(m, &footnotev1ListPeersServer{stream})
}

type Footnotev1_ListPeersServer interface {
	Send(*ListPeersRes) error
	grpc.ServerStream
}

type footnotev1ListPeersServer struct {
	grpc.ServerStream
}

func (x *footnotev1ListPeersServer) Send(m *ListPeersRes) error {
	return x.ServerStream.SendMsg(m)
}

func _Footnotev1_Checkout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckoutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).Checkout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/Checkout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).Checkout(ctx, req.(*CheckoutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Footnotev1_WriteAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteAtReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).WriteAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/WriteAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).WriteAt(ctx, req.(*WriteAtReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Footnotev1_Truncate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TruncateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).Truncate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/Truncate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).Truncate(ctx, req.(*TruncateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Footnotev1_PreCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreCommitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).PreCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/PreCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).PreCommit(ctx, req.(*PreCommitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Footnotev1_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).Commit(ctx, req.(*CommitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Footnotev1_ReadAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAtReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).ReadAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/ReadAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).ReadAt(ctx, req.(*ReadAtReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Footnotev1_GetBlobInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlobInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).GetBlobInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/GetBlobInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).GetBlobInfo(ctx, req.(*BlobInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Footnotev1_ListBlobInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListBlobInfoReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(Footnotev1Server).ListBlobInfo(m, &footnotev1ListBlobInfoServer{stream})
}

type Footnotev1_ListBlobInfoServer interface {
	Send(*BlobInfoRes) error
	grpc.ServerStream
}

type footnotev1ListBlobInfoServer struct {
	grpc.ServerStream
}

func (x *footnotev1ListBlobInfoServer) Send(m *BlobInfoRes) error {
	return x.ServerStream.SendMsg(m)
}

func _Footnotev1_SendUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Footnotev1Server).SendUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Footnotev1/SendUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Footnotev1Server).SendUpdate(ctx, req.(*SendUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Footnotev1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Footnotev1",
	HandlerType: (*Footnotev1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _Footnotev1_GetStatus_Handler,
		},
		{
			MethodName: "AddPeer",
			Handler:    _Footnotev1_AddPeer_Handler,
		},
		{
			MethodName: "BanPeer",
			Handler:    _Footnotev1_BanPeer_Handler,
		},
		{
			MethodName: "UnbanPeer",
			Handler:    _Footnotev1_UnbanPeer_Handler,
		},
		{
			MethodName: "Checkout",
			Handler:    _Footnotev1_Checkout_Handler,
		},
		{
			MethodName: "WriteAt",
			Handler:    _Footnotev1_WriteAt_Handler,
		},
		{
			MethodName: "Truncate",
			Handler:    _Footnotev1_Truncate_Handler,
		},
		{
			MethodName: "PreCommit",
			Handler:    _Footnotev1_PreCommit_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _Footnotev1_Commit_Handler,
		},
		{
			MethodName: "ReadAt",
			Handler:    _Footnotev1_ReadAt_Handler,
		},
		{
			MethodName: "GetBlobInfo",
			Handler:    _Footnotev1_GetBlobInfo_Handler,
		},
		{
			MethodName: "SendUpdate",
			Handler:    _Footnotev1_SendUpdate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListPeers",
			Handler:       _Footnotev1_ListPeers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListBlobInfo",
			Handler:       _Footnotev1_ListBlobInfo_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
